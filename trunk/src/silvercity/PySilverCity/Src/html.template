import HTMLGenerator
import Lexer
import Keywords
from _SilverCity import FindLexerModuleByID, PropertySet, WordList
from ScintillaConstants import *

class HyperTextLexer(Lexer.Lexer):
    def __init__(self, properties = PropertySet()):
        self._properties = properties
        self._lexer = FindLexerModuleByID(SCLEX_HTML)
        self._keyword_lists = [
            WordList(Keywords.hypertext_keywords),
            WordList(Keywords.js_keywords),
            WordList(Keywords.vb_keywords),
            WordList(Keywords.python_keywords),
            WordList(Keywords.php_keywords),
            WordList(Keywords.sgml_keywords)
                               ]
class HyperTextHandler:
    def __init__(self):
        self.handlers = {
            SCE_H_DEFAULT : getattr(self, 'handle_h_default', self.handle_other),
            SCE_H_TAG : getattr(self, 'handle_h_tag', self.handle_other),
            SCE_H_TAGUNKNOWN : getattr(self, 'handle_h_tagunknown', self.handle_other),
            SCE_H_ATTRIBUTE : getattr(self, 'handle_h_attribute', self.handle_other),
            SCE_H_ATTRIBUTEUNKNOWN : getattr(self, 'handle_h_attributeunknown', self.handle_other),
            SCE_H_NUMBER : getattr(self, 'handle_h_number', self.handle_other),
            SCE_H_DOUBLESTRING : getattr(self, 'handle_h_doublestring', self.handle_other),
            SCE_H_SINGLESTRING : getattr(self, 'handle_h_singlestring', self.handle_other),
            SCE_H_OTHER : getattr(self, 'handle_h_other', self.handle_other),
            SCE_H_COMMENT : getattr(self, 'handle_h_comment', self.handle_other),
            SCE_H_ENTITY : getattr(self, 'handle_h_entity', self.handle_other),
            SCE_H_TAGEND : getattr(self, 'handle_h_tagend', self.handle_other),
            SCE_H_XMLSTART : getattr(self, 'handle_h_xmlstart', self.handle_other),
            SCE_H_XMLEND : getattr(self, 'handle_h_xmlend', self.handle_other),
            SCE_H_SCRIPT : getattr(self, 'handle_h_script', self.handle_other),
            SCE_H_ASP : getattr(self, 'handle_h_asp', self.handle_other),
            SCE_H_ASPAT : getattr(self, 'handle_h_aspat', self.handle_other),
            SCE_H_CDATA : getattr(self, 'handle_h_cdata', self.handle_other),
            SCE_H_QUESTION : getattr(self, 'handle_h_question', self.handle_other),
            SCE_H_VALUE : getattr(self, 'handle_h_value', self.handle_other),
            SCE_H_XCCOMMENT : getattr(self, 'handle_h_xccomment', self.handle_other),
            SCE_H_SGML_DEFAULT : getattr(self, 'handle_h_sgml_default', self.handle_other),
            SCE_H_SGML_COMMAND : getattr(self, 'handle_h_sgml_command', self.handle_other),
            SCE_H_SGML_1ST_PARAM : getattr(self, 'handle_h_sgml_1st_param', self.handle_other),
            SCE_H_SGML_DOUBLESTRING : getattr(self, 'handle_h_sgml_doublestring', self.handle_other),
            SCE_H_SGML_SIMPLESTRING : getattr(self, 'handle_h_sgml_simplestring', self.handle_other),
            SCE_H_SGML_ERROR : getattr(self, 'handle_h_sgml_error', self.handle_other),
            SCE_H_SGML_SPECIAL : getattr(self, 'handle_h_sgml_special', self.handle_other),
            SCE_H_SGML_ENTITY : getattr(self, 'handle_h_sgml_entity', self.handle_other),
            SCE_H_SGML_COMMENT : getattr(self, 'handle_h_sgml_comment', self.handle_other),
            SCE_H_SGML_1ST_PARAM_COMMENT : getattr(self, 'handle_h_sgml_1st_param_comment', self.handle_other),
            SCE_H_SGML_BLOCK_DEFAULT : getattr(self, 'handle_h_sgml_block_default', self.handle_other),
            SCE_HJ_START : getattr(self, 'handle_hj_start', self.handle_other),
            SCE_HJ_DEFAULT : getattr(self, 'handle_hj_default', self.handle_other),
            SCE_HJ_COMMENT : getattr(self, 'handle_hj_comment', self.handle_other),
            SCE_HJ_COMMENTLINE : getattr(self, 'handle_hj_commentline', self.handle_other),
            SCE_HJ_COMMENTDOC : getattr(self, 'handle_hj_commentdoc', self.handle_other),
            SCE_HJ_NUMBER : getattr(self, 'handle_hj_number', self.handle_other),
            SCE_HJ_WORD : getattr(self, 'handle_hj_word', self.handle_other),
            SCE_HJ_KEYWORD : getattr(self, 'handle_hj_keyword', self.handle_other),
            SCE_HJ_DOUBLESTRING : getattr(self, 'handle_hj_doublestring', self.handle_other),
            SCE_HJ_SINGLESTRING : getattr(self, 'handle_hj_singlestring', self.handle_other),
            SCE_HJ_SYMBOLS : getattr(self, 'handle_hj_symbols', self.handle_other),
            SCE_HJ_STRINGEOL : getattr(self, 'handle_hj_stringeol', self.handle_other),
            SCE_HJ_REGEX : getattr(self, 'handle_hj_regex', self.handle_other),
            SCE_HJA_START : getattr(self, 'handle_hja_start', self.handle_other),
            SCE_HJA_DEFAULT : getattr(self, 'handle_hja_default', self.handle_other),
            SCE_HJA_COMMENT : getattr(self, 'handle_hja_comment', self.handle_other),
            SCE_HJA_COMMENTLINE : getattr(self, 'handle_hja_commentline', self.handle_other),
            SCE_HJA_COMMENTDOC : getattr(self, 'handle_hja_commentdoc', self.handle_other),
            SCE_HJA_NUMBER : getattr(self, 'handle_hja_number', self.handle_other),
            SCE_HJA_WORD : getattr(self, 'handle_hja_word', self.handle_other),
            SCE_HJA_KEYWORD : getattr(self, 'handle_hja_keyword', self.handle_other),
            SCE_HJA_DOUBLESTRING : getattr(self, 'handle_hja_doublestring', self.handle_other),
            SCE_HJA_SINGLESTRING : getattr(self, 'handle_hja_singlestring', self.handle_other),
            SCE_HJA_SYMBOLS : getattr(self, 'handle_hja_symbols', self.handle_other),
            SCE_HJA_STRINGEOL : getattr(self, 'handle_hja_stringeol', self.handle_other),
            SCE_HJA_REGEX : getattr(self, 'handle_hja_regex', self.handle_other),
            SCE_HB_START : getattr(self, 'handle_hb_start', self.handle_other),
            SCE_HB_DEFAULT : getattr(self, 'handle_hb_default', self.handle_other),
            SCE_HB_COMMENTLINE : getattr(self, 'handle_hb_commentline', self.handle_other),
            SCE_HB_NUMBER : getattr(self, 'handle_hb_number', self.handle_other),
            SCE_HB_WORD : getattr(self, 'handle_hb_word', self.handle_other),
            SCE_HB_STRING : getattr(self, 'handle_hb_string', self.handle_other),
            SCE_HB_IDENTIFIER : getattr(self, 'handle_hb_identifier', self.handle_other),
            SCE_HB_STRINGEOL : getattr(self, 'handle_hb_stringeol', self.handle_other),
            SCE_HBA_START : getattr(self, 'handle_hba_start', self.handle_other),
            SCE_HBA_DEFAULT : getattr(self, 'handle_hba_default', self.handle_other),
            SCE_HBA_COMMENTLINE : getattr(self, 'handle_hba_commentline', self.handle_other),
            SCE_HBA_NUMBER : getattr(self, 'handle_hba_number', self.handle_other),
            SCE_HBA_WORD : getattr(self, 'handle_hba_word', self.handle_other),
            SCE_HBA_STRING : getattr(self, 'handle_hba_string', self.handle_other),
            SCE_HBA_IDENTIFIER : getattr(self, 'handle_hba_identifier', self.handle_other),
            SCE_HBA_STRINGEOL : getattr(self, 'handle_hba_stringeol', self.handle_other),
            SCE_HP_START : getattr(self, 'handle_hp_start', self.handle_other),
            SCE_HP_DEFAULT : getattr(self, 'handle_hp_default', self.handle_other),
            SCE_HP_COMMENTLINE : getattr(self, 'handle_hp_commentline', self.handle_other),
            SCE_HP_NUMBER : getattr(self, 'handle_hp_number', self.handle_other),
            SCE_HP_STRING : getattr(self, 'handle_hp_string', self.handle_other),
            SCE_HP_CHARACTER : getattr(self, 'handle_hp_character', self.handle_other),
            SCE_HP_WORD : getattr(self, 'handle_hp_word', self.handle_other),
            SCE_HP_TRIPLE : getattr(self, 'handle_hp_triple', self.handle_other),
            SCE_HP_TRIPLEDOUBLE : getattr(self, 'handle_hp_tripledouble', self.handle_other),
            SCE_HP_CLASSNAME : getattr(self, 'handle_hp_classname', self.handle_other),
            SCE_HP_DEFNAME : getattr(self, 'handle_hp_defname', self.handle_other),
            SCE_HP_OPERATOR : getattr(self, 'handle_hp_operator', self.handle_other),
            SCE_HP_IDENTIFIER : getattr(self, 'handle_hp_identifier', self.handle_other),
            SCE_HPA_START : getattr(self, 'handle_hpa_start', self.handle_other),
            SCE_HPA_DEFAULT : getattr(self, 'handle_hpa_default', self.handle_other),
            SCE_HPA_COMMENTLINE : getattr(self, 'handle_hpa_commentline', self.handle_other),
            SCE_HPA_NUMBER : getattr(self, 'handle_hpa_number', self.handle_other),
            SCE_HPA_STRING : getattr(self, 'handle_hpa_string', self.handle_other),
            SCE_HPA_CHARACTER : getattr(self, 'handle_hpa_character', self.handle_other),
            SCE_HPA_WORD : getattr(self, 'handle_hpa_word', self.handle_other),
            SCE_HPA_TRIPLE : getattr(self, 'handle_hpa_triple', self.handle_other),
            SCE_HPA_TRIPLEDOUBLE : getattr(self, 'handle_hpa_tripledouble', self.handle_other),
            SCE_HPA_CLASSNAME : getattr(self, 'handle_hpa_classname', self.handle_other),
            SCE_HPA_DEFNAME : getattr(self, 'handle_hpa_defname', self.handle_other),
            SCE_HPA_OPERATOR : getattr(self, 'handle_hpa_operator', self.handle_other),
            SCE_HPA_IDENTIFIER : getattr(self, 'handle_hpa_identifier', self.handle_other),
            SCE_HPHP_DEFAULT : getattr(self, 'handle_hphp_default', self.handle_other),
            SCE_HPHP_HSTRING : getattr(self, 'handle_hphp_hstring', self.handle_other),
            SCE_HPHP_SIMPLESTRING : getattr(self, 'handle_hphp_simplestring', self.handle_other),
            SCE_HPHP_WORD : getattr(self, 'handle_hphp_word', self.handle_other),
            SCE_HPHP_NUMBER : getattr(self, 'handle_hphp_number', self.handle_other),
            SCE_HPHP_VARIABLE : getattr(self, 'handle_hphp_variable', self.handle_other),
            SCE_HPHP_COMMENT : getattr(self, 'handle_hphp_comment', self.handle_other),
            SCE_HPHP_COMMENTLINE : getattr(self, 'handle_hphp_commentline', self.handle_other),
            SCE_HPHP_HSTRING_VARIABLE : getattr(self, 'handle_hphp_hstring_variable', self.handle_other),
            SCE_HPHP_OPERATOR : getattr(self, 'handle_hphp_operator', self.handle_other)
            }
        
        
    def event_handler(self, style, **kwargs):
        kwargs.update({'style' : style})
        self.handlers.get(style, self.handle_other)(**kwargs)

class HyperTextHTMLGenerator(HTMLGenerator.HTMLGenerator, HyperTextHandler):
    css_classes = {
        SCE_H_DEFAULT : 'h_default',
        SCE_H_TAG : 'h_tag',
        SCE_H_TAGUNKNOWN : 'h_tagunknown',
        SCE_H_ATTRIBUTE : 'h_attribute',
        SCE_H_ATTRIBUTEUNKNOWN : 'h_attributeunknown',
        SCE_H_NUMBER : 'h_number',
        SCE_H_DOUBLESTRING : 'h_doublestring',
        SCE_H_SINGLESTRING : 'h_singlestring',
        SCE_H_OTHER : 'h_other',
        SCE_H_COMMENT : 'h_comment',
        SCE_H_ENTITY : 'h_entity',
        SCE_H_TAGEND : 'h_tagend',
        SCE_H_XMLSTART : 'h_xmlstart',
        SCE_H_XMLEND : 'h_xmlend',
        SCE_H_SCRIPT : 'h_script',
        SCE_H_ASP : 'h_asp',
        SCE_H_ASPAT : 'h_aspat',
        SCE_H_CDATA : 'h_cdata',
        SCE_H_QUESTION : 'h_question',
        SCE_H_VALUE : 'h_value',
        SCE_H_XCCOMMENT : 'h_xccomment',
        SCE_H_SGML_DEFAULT : 'h_sgml_default',
        SCE_H_SGML_COMMAND : 'h_sgml_command',
        SCE_H_SGML_1ST_PARAM : 'h_sgml_1st_param',
        SCE_H_SGML_DOUBLESTRING : 'h_sgml_doublestring',
        SCE_H_SGML_SIMPLESTRING : 'h_sgml_simplestring',
        SCE_H_SGML_ERROR : 'h_sgml_error',
        SCE_H_SGML_SPECIAL : 'h_sgml_special',
        SCE_H_SGML_ENTITY : 'h_sgml_entity',
        SCE_H_SGML_COMMENT : 'h_sgml_comment',
        SCE_H_SGML_1ST_PARAM_COMMENT : 'h_sgml_1st_param_comment',
        SCE_H_SGML_BLOCK_DEFAULT : 'h_sgml_block_default',
        SCE_HJ_START : 'hj_start',
        SCE_HJ_DEFAULT : 'hj_default',
        SCE_HJ_COMMENT : 'hj_comment',
        SCE_HJ_COMMENTLINE : 'hj_commentline',
        SCE_HJ_COMMENTDOC : 'hj_commentdoc',
        SCE_HJ_NUMBER : 'hj_number',
        SCE_HJ_WORD : 'hj_word',
        SCE_HJ_KEYWORD : 'hj_keyword',
        SCE_HJ_DOUBLESTRING : 'hj_doublestring',
        SCE_HJ_SINGLESTRING : 'hj_singlestring',
        SCE_HJ_SYMBOLS : 'hj_symbols',
        SCE_HJ_STRINGEOL : 'hj_stringeol',
        SCE_HJ_REGEX : 'hj_regex',
        SCE_HJA_START : 'hja_start',
        SCE_HJA_DEFAULT : 'hja_default',
        SCE_HJA_COMMENT : 'hja_comment',
        SCE_HJA_COMMENTLINE : 'hja_commentline',
        SCE_HJA_COMMENTDOC : 'hja_commentdoc',
        SCE_HJA_NUMBER : 'hja_number',
        SCE_HJA_WORD : 'hja_word',
        SCE_HJA_KEYWORD : 'hja_keyword',
        SCE_HJA_DOUBLESTRING : 'hja_doublestring',
        SCE_HJA_SINGLESTRING : 'hja_singlestring',
        SCE_HJA_SYMBOLS : 'hja_symbols',
        SCE_HJA_STRINGEOL : 'hja_stringeol',
        SCE_HJA_REGEX : 'hja_regex',
        SCE_HB_START : 'hb_start',
        SCE_HB_DEFAULT : 'hb_default',
        SCE_HB_COMMENTLINE : 'hb_commentline',
        SCE_HB_NUMBER : 'hb_number',
        SCE_HB_WORD : 'hb_word',
        SCE_HB_STRING : 'hb_string',
        SCE_HB_IDENTIFIER : 'hb_identifier',
        SCE_HB_STRINGEOL : 'hb_stringeol',
        SCE_HBA_START : 'hba_start',
        SCE_HBA_DEFAULT : 'hba_default',
        SCE_HBA_COMMENTLINE : 'hba_commentline',
        SCE_HBA_NUMBER : 'hba_number',
        SCE_HBA_WORD : 'hba_word',
        SCE_HBA_STRING : 'hba_string',
        SCE_HBA_IDENTIFIER : 'hba_identifier',
        SCE_HBA_STRINGEOL : 'hba_stringeol',
        SCE_HP_START : 'hp_start',
        SCE_HP_DEFAULT : 'hp_default',
        SCE_HP_COMMENTLINE : 'hp_commentline',
        SCE_HP_NUMBER : 'hp_number',
        SCE_HP_STRING : 'hp_string',
        SCE_HP_CHARACTER : 'hp_character',
        SCE_HP_WORD : 'hp_word',
        SCE_HP_TRIPLE : 'hp_triple',
        SCE_HP_TRIPLEDOUBLE : 'hp_tripledouble',
        SCE_HP_CLASSNAME : 'hp_classname',
        SCE_HP_DEFNAME : 'hp_defname',
        SCE_HP_OPERATOR : 'hp_operator',
        SCE_HP_IDENTIFIER : 'hp_identifier',
        SCE_HPA_START : 'hpa_start',
        SCE_HPA_DEFAULT : 'hpa_default',
        SCE_HPA_COMMENTLINE : 'hpa_commentline',
        SCE_HPA_NUMBER : 'hpa_number',
        SCE_HPA_STRING : 'hpa_string',
        SCE_HPA_CHARACTER : 'hpa_character',
        SCE_HPA_WORD : 'hpa_word',
        SCE_HPA_TRIPLE : 'hpa_triple',
        SCE_HPA_TRIPLEDOUBLE : 'hpa_tripledouble',
        SCE_HPA_CLASSNAME : 'hpa_classname',
        SCE_HPA_DEFNAME : 'hpa_defname',
        SCE_HPA_OPERATOR : 'hpa_operator',
        SCE_HPA_IDENTIFIER : 'hpa_identifier',
        SCE_HPHP_DEFAULT : 'hphp_default',
        SCE_HPHP_HSTRING : 'hphp_hstring',
        SCE_HPHP_SIMPLESTRING : 'hphp_simplestring',
        SCE_HPHP_WORD : 'hphp_word',
        SCE_HPHP_NUMBER : 'hphp_number',
        SCE_HPHP_VARIABLE : 'hphp_variable',
        SCE_HPHP_COMMENT : 'hphp_comment',
        SCE_HPHP_COMMENTLINE : 'hphp_commentline',
        SCE_HPHP_HSTRING_VARIABLE : 'hphp_hstring_variable',
        SCE_HPHP_OPERATOR : 'hphp_operator'
    }
    
    def __init__(self):
        HyperTextHandler.__init__(self)

    def handle_other(self, style, text, **ignored):
        css_class = self.css_classes.get(style, '')
            
        if css_class:
            self._file.write('<span class="%s">' % css_class)
        
        self._file.write(self.markup(text))

        if css_class:
            self._file.write('</span>')

    def generate_html(self, file, buffer, lexer = HyperTextLexer()):
        self._file = file
        
        lexer.lex_to_events(buffer, self.event_handler)

