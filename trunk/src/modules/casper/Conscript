#!/usr/local/bin/perl
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
# 
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
# 
# The Original Code is Komodo code.
# 
# The Initial Developer of the Original Code is ActiveState Software Inc.
# Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
# ActiveState Software Inc. All Rights Reserved.
# 
# Contributor(s):
#   ActiveState Software Inc
# 
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
# 
# ***** END LICENSE BLOCK *****

Import(
    'cons',
    'build',
    'mozChromeDir',
    'ranRegxpcomStateFileName',
    'mozComponentsDir',
    'mozIdlIncludePath',
    'idlExportDir',
    'komodoPythonUtilsDir',
    'unsiloedPythonExe',
    'jarring',
    'mozBin',
    'buildFlavour',
    'supportDir',
    'platform',
    'productType',
    'mozVersion',
    'komodoShortVersion',
    'mozExtensionDir',
);

# The Plan:
# - installer builds:
#   Install a casper.xpi so this can be optionally installed into an
#   installation.
# - dev builds:
#   Install the casper extension by default.
#   Note: this part is spread out over "src/modules/casper/...Conscript".


if ($buildFlavour ne "full") {
    $cons->InstallAs("$mozExtensionDir/casper\@ActiveState.com/install.rdf", 'install.rdf');
    $cons->InstallAs("$mozExtensionDir/casper\@ActiveState.com/chrome.manifest", 'devbuild.manifest');

} else {
    $cons->Command(
        ["casper.xpi", "casper.jar"],
        # needed for 1.8 extensions
        "install.rdf",
        "chrome.manifest",
        # extension files
        "content/testrunner.xul",
        "content/unittest.js",
        "content/logger.js",
        "content/xpath.js",
        "content/events.js",
        "content/json.js",
        "content/recorder.js",
        "content/recorder.xul",
        "content/komodoOverlay.xul",
        "content/tasksOverlay.xul",
        "content/tasksOverlay-ff.xul",
        "content/tasksOverlay-tb.xul",
        "content/test/test_test.js",
        "content/test/test_async.js",
        "content/test/_event_test_template.js",
        "components/casper-clhandler.js",
        "skin/casper.css",
        qq(
            $unsiloedPythonExe bin/run-in-dir.py %1:d zip -X -Dr casper.jar content
            $unsiloedPythonExe bin/run-in-dir.py %1:d zip -X -Dr casper.jar skin
            $unsiloedPythonExe bin/run-in-dir.py %1:d zip -X casper.xpi casper.jar install.rdf chrome.manifest
        )
    );
    
    if (1) {
        # if we want this by default
        $cons->InstallAs("$mozExtensionDir/casper\@ActiveState.com/casper.jar", 'casper.jar');
        $cons->InstallAs("$mozExtensionDir/casper\@ActiveState.com/install.rdf", 'install.rdf');
        $cons->InstallAs("$mozExtensionDir/casper\@ActiveState.com/chrome.manifest", 'chrome.manifest');
        $cons->InstallAs("$mozExtensionDir/casper\@ActiveState.com/components/casper-clhandler.js", 'components/casper-clhandler.js');
    } else {
        # install the xpi with komodo
        $cons->Install("$supportDir/modules", 'casper.xpi');
    }

}
