<?xml version="1.0" encoding="UTF-8"?>

<!-- ***** BEGIN LICENSE BLOCK *****
 Version: MPL 1.1/GPL 2.0/LGPL 2.1
 
 The contents of this file are subject to the Mozilla Public License
 Version 1.1 (the "License"); you may not use this file except in
 compliance with the License. You may obtain a copy of the License at
 http://www.mozilla.org/MPL/
 
 Software distributed under the License is distributed on an "AS IS"
 basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 License for the specific language governing rights and limitations
 under the License.
 
 The Original Code is Komodo code.
 
 The Initial Developer of the Original Code is ActiveState Software Inc.
 Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
 ActiveState Software Inc. All Rights Reserved.
 
 Contributor(s):
   ActiveState Software Inc
 
 Alternatively, the contents of this file may be used under the terms of
 either the GNU General Public License Version 2 or later (the "GPL"), or
 the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 in which case the provisions of the GPL or the LGPL are applicable instead
 of those above. If you wish to allow use of your version of this file only
 under the terms of either the GPL or the LGPL, and not to allow others to
 use your version of this file under the terms of the MPL, indicate your
 decision by deleting the provisions above and replace them with the notice
 and other provisions required by the GPL or the LGPL. If you do not delete
 the provisions above, a recipient may use your version of this file under
 the terms of any one of the MPL, the GPL or the LGPL.
 
 ***** END LICENSE BLOCK ***** -->

<codeintel version="2.0">
  <file lang="IDL" mtime="1164834884" path="nsIXMLHttpRequest.idl">
    <scope ilk="blob" lang="IDL" name="nsIXMLHttpRequest.idl">
      <scope ilk="class" line="82" lineend="284" name="XMLHttpRequest">
        <variable attributes="readonly" citdl="Channel" line="95" name="channel" />
        <variable attributes="readonly" citdl="DOMDocument" line="103" name="responseXML" />
        <variable attributes="readonly" citdl="String" line="110" name="responseText" />
        <variable attributes="readonly" citdl="unsigned long" line="116" name="status" />
        <variable attributes="readonly" citdl="String" line="122" name="statusText" />
        <scope doc="If the request has been sent already, this method will&#xA;abort the request." ilk="function" line="128" lineend="128" name="abort" signature="abort()" />
        <scope doc="Returns all of the response headers as a string for HTTP&#xA;requests.&#xA;&#xA;Note that this will return all the headers from the *current*&#xA;part of a multipart request, not from the original channel." ilk="function" line="140" lineend="140" name="getAllResponseHeaders" returns="string" signature="getAllResponseHeaders()" />
        <scope attributes="noscript" doc="Native (non-script) method to initialize a request. Note that&#xA;the request is not sent until the &lt;code&gt;send&lt;/code&gt; method&#xA;is invoked.&#xA;&#xA;Will abort currently active loads.&#xA;&#xA;After the initial response, all event listeners will be cleared.&#xA;Call open() before setting new event listeners." ilk="function" line="177" lineend="177" name="openRequest" signature="openRequest(method, url, async, user, password)">
          <variable citdl="String" ilk="argument" name="method" />
          <variable citdl="String" ilk="argument" name="url" />
          <variable citdl="boolean" ilk="argument" name="async" />
          <variable citdl="String" ilk="argument" name="user" />
          <variable citdl="String" ilk="argument" name="password" />
        </scope>
        <scope doc="Meant to be a script-only method for initializing a request.&#xA;The parameters are similar to the ones detailed in the&#xA;description of &lt;code&gt;openRequest&lt;/code&gt;, but the last&#xA;3 are optional.&#xA;&#xA;Will abort currently active loads.&#xA;&#xA;After the initial response, all event listeners will be cleared.&#xA;Call open() before setting new event listeners." ilk="function" line="211" lineend="211" name="open" signature="open(method, url)">
          <variable citdl="String" ilk="argument" name="method" />
          <variable citdl="String" ilk="argument" name="url" />
        </scope>
        <scope doc="Sends the request. If the request is asynchronous, returns&#xA;immediately after sending the request. If it is synchronous&#xA;returns only after the response has been received.&#xA;&#xA;After the initial response, all event listeners will be cleared.&#xA;Call open() before setting new event listeners." ilk="function" line="236" lineend="236" name="send" signature="send(body)">
          <variable citdl="Variant" ilk="argument" name="body" />
        </scope>
        <scope doc="Sets a HTTP request header for HTTP requests. You must call open&#xA;before setting the request headers." ilk="function" line="245" lineend="245" name="setRequestHeader" signature="setRequestHeader(header, value)">
          <variable citdl="String" ilk="argument" name="header" />
          <variable citdl="String" ilk="argument" name="value" />
        </scope>
        <variable attributes="readonly" citdl="long" line="257" name="readyState" />
        <scope doc="Override the mime type returned by the server (if any). This may&#xA;be used, for example, to force a stream to be treated and parsed&#xA;as text/xml, even if the server does not report it as such. This&#xA;must be done before the &lt;code&gt;send&lt;/code&gt; method is invoked." ilk="function" line="268" lineend="268" name="overrideMimeType" signature="overrideMimeType(mimetype)">
          <variable citdl="String" ilk="argument" name="mimetype" />
        </scope>
        <variable citdl="boolean" line="283" name="multipart" />
        <variable citdl="DOMEventListener" line="309" name="onload" />
        <variable citdl="DOMEventListener" line="322" name="onerror" />
        <variable citdl="DOMEventListener" line="336" name="onprogress" />
        <variable citdl="OnReadyStateChangeHandler" line="347" name="onreadystatechange" />
      </scope>
      <scope ilk="class" line="288" lineend="294" name="OnReadyStateChangeHandler">
        <scope doc="Helper to implement the onreadystatechange callback member.&#xA;You should not need to use this." ilk="function" line="293" lineend="293" name="handleEvent" signature="handleEvent()" />
      </scope>
    </scope>
  </file>
</codeintel>
