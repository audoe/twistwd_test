<?xml version="1.0"?>
<!DOCTYPE dialog SYSTEM "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" [
  <!ENTITY % dialogsDTD SYSTEM "chrome://komodo/locale/dialogs.dtd">
  %dialogsDTD;
]>

<!-- ***** BEGIN LICENSE BLOCK *****
 Version: MPL 1.1/GPL 2.0/LGPL 2.1
 
 The contents of this file are subject to the Mozilla Public License
 Version 1.1 (the "License"); you may not use this file except in
 compliance with the License. You may obtain a copy of the License at
 http://www.mozilla.org/MPL/
 
 Software distributed under the License is distributed on an "AS IS"
 basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 License for the specific language governing rights and limitations
 under the License.
 
 The Original Code is Komodo code.
 
 The Initial Developer of the Original Code is ActiveState Software Inc.
 Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
 ActiveState Software Inc. All Rights Reserved.
 
 Contributor(s):
   ActiveState Software Inc
 
 Alternatively, the contents of this file may be used under the terms of
 either the GNU General Public License Version 2 or later (the "GPL"), or
 the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 in which case the provisions of the GPL or the LGPL are applicable instead
 of those above. If you wish to allow use of your version of this file only
 under the terms of either the GPL or the LGPL, and not to allow others to
 use your version of this file under the terms of the MPL, indicate your
 decision by deleting the provisions above and replace them with the notice
 and other provisions required by the GPL or the LGPL. If you do not delete
 the provisions above, a recipient may use your version of this file under
 the terms of any one of the MPL, the GPL or the LGPL.
 
 ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/global/global.css" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/bindings/buttons.css" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/bindings/widgets.css" type="text/css"?>

<dialog id="dialog-editpathmap"
        title="&URIMapping.title;"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        orient="vertical"
        style="min-width: 35em;"
        buttons="accept,cancel"
        ondialogcancel="return onCancel();"
        ondialogaccept="return onOK();"
        onload="onLoad();">

<script src="chrome://xtk/content/xtk.js" type="application/x-javascript;version=1.7"/>
<script type="application/x-javascript;version=1.7" src="chrome://komodo/content/library/logging.js"/>
<script type="application/x-javascript;version=1.7" src="chrome://komodo/content/library/uriparse.js"/>
<script type="application/x-javascript;version=1.7" src="chrome://komodo/content/library/filepickers.js"/>
<script type="application/x-javascript;version=1.7" src="chrome://komodo/content/library/dialogs.js"/>
<script type="application/x-javascript;version=1.7" src="chrome://komodo/content/library/windowManager.js"/>
<script type="application/x-javascript;version=1.7">
<![CDATA[
var dialog = null;
var uri = null;
var path = null;
var bundle = Components.classes["@mozilla.org/intl/stringbundle;1"]
    .getService(Components.interfaces.nsIStringBundleService)
    .createBundle("chrome://komodo/locale/dialogs.properties");

function onLoad() {
    // get window arguments and fill in our dialog
    uri = document.getElementById('uri');
    path = document.getElementById('path');
    dialog = document.documentElement;
    if (window.arguments[0]) {
        uri.value = window.arguments[0].uri;
        try {
            path.value = ko.uriparse.URIToLocalPath(window.arguments[0].path);
        } catch (ex) {
            // Could not convert into a local path, leave as is then.
            path.value = window.arguments[0].path;
        }
        if (window.arguments[0].project_name) {
            document.getElementById("project_radio").setAttribute('label',
                bundle.formatStringFromName("projectName.label",
                                            [window.arguments[0].project_name], 1));
        }
    }
    updateAccept();
    if (!opener.ko || ! opener.ko.projects) {
        var el = document.getElementById("prefchoice");
        el.parentNode.removeChild(el);
    } else
    if (!opener.ko.projects.manager.currentProject) {
        document.getElementById("prefchoice").disabled = true;
    }
}

function updateAccept() {
    if (!uri.value || !path.value) {
        dialog.getButton("accept").disabled = true;
    } else {
        dialog.getButton("accept").disabled = false;
    }
}

function onOK() {
    // set the window arguments for results
    window.arguments[0].uri = document.getElementById('uri').value;
    // The return (mapped) path needs to be in URI format.
    window.arguments[0].path = ko.uriparse.pathToURI(document.getElementById('path').value);
    if (document.getElementById('prefchoice'))
        window.arguments[0].project = document.getElementById('prefchoice').selectedItem.value;
}

function onCancel() {
    // set the window arguments for results so we dont do anything with them
    window.arguments[0].uri = null;
    window.arguments[0].path = null;
}

function browseForDir(elem, remote) {
    if (!remote) {
        ko.filepicker.browseForDir(elem);
    } else {
        ko.filepicker.browseForRemoteDir(elem);
    }
    var path = elem.value;
    var uri = document.getElementById('uri').value;
    if (!uri || uri[uri.length-1] == "/") {
<!-- # if PLATFORM == "win" -->
        if (!remote && path[path.length-1] != "\\")
            document.getElementById('path').value = path +"\\";
        else
<!-- # endif -->
        if (path[path.length-1] != "/")
            document.getElementById('path').value = path +"/";
    }
    updateAccept();
}
]]>
</script>

<vbox flex="1">
    <caption label="&addEditPathMapping.label;"/>
    <grid>
        <columns>
            <column/>
            <column flex="1"/>
        </columns>
        <rows>
        <row align="center">
            <label value="&URI.label;" control="varName" class="kopadded"
                   style="width: 50px;margin: 5px 1px;"/>
            <textbox id="uri" flex="1" oninput="updateAccept()"/>
        </row>
        <row align="center">
            <label value="&mapsTo.label;" control="varValue" class="kopadded"
                   style="width: 50px; margin: 5px 1px;"/>
            <textbox id="path" flex="1" oninput="updateAccept()"/>

            <!-- This would be nicer looking than having the two buttons
                 below, but it does not work on Linux for drag/drop operations
                 due to being called in an existing GTK event. To see an example
                 of this problem, on linux, drag/drop an unmapped url onto
                 Komodo, say yes to setup a new mapped uri, in the mapped uri
                 dialog, try and use the mouse right-click context menu to
                 copy and/or paste.
            -->
            <!--
            <toolbarbutton id="editPathBrowseButton"
                           tooltiptext="&browseLocalRemotoDir.tooltiptext;"
                           type="menu"
                           persist="buttonstyle"
                           buttonstyle="pictures">
                <menupopup id="editpathmap_browse_menupopup">
                    <menuitem id="editpathmap_browse_local_menuitem"
                              oncommand="browseForDir(document.getElementById('path'), false)"
                              label="&browseLocally.label;" />
                    <menuitem id="editpathmap_browse_remote_menuitem"
                              oncommand="browseForDir(document.getElementById('path'), true)"
                              label="&browseRemotely.label;" />
                </menupopup>
            </toolbarbutton>
            -->
        </row>
        <row>
            <hbox/>
            <hbox align="right">
                <button label="&local.label;" oncommand="browseForDir(document.getElementById('path'))" />
                <button label="&remote.label;" oncommand="browseForDir(document.getElementById('path'),true);" />
            </hbox>
        </row>
        </rows>
    </grid>
    <separator class="thin"/>
    <vbox id="add-to" flex="1">
        <radiogroup id="prefchoice">
        <caption label="&saveMappingTo.label;"/>
            <radio label="&globalPreferences.label;" selected="true" value="false"/>
            <radio id="project_radio" label="&currentProjectPreferences.label;" value="true"/>
        </radiogroup>
    </vbox>
    <separator class="thin"/>

</vbox>
</dialog>
