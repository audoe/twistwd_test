# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
# 
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
# 
# The Original Code is Komodo code.
# 
# The Initial Developer of the Original Code is ActiveState Software Inc.
# Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
# ActiveState Software Inc. All Rights Reserved.
# 
# Contributor(s):
#   ActiveState Software Inc
# 
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
# 
# ***** END LICENSE BLOCK *****

""" dlg_py_showfile_ui.py --

UI generated by GUI Builder v1.0on 2002-09-12 10:46:50 from:
	uiC:/p4/depot/main/Apps/Komodo-devel/src/samples/dlg_py_showfile_ui.py
THIS IS AN AUTOGENERATED FILE AND SHOULD NOT BE EDITED.
The associated callback file should be modified instead.
"""
from Tkinter import *

class Dlg_py_showfile:
    def __init__(self, root):


        # Widget Initialization
        self.frame_1 = Frame(root,
        )
        self.label_1 = Label(root,
            font = '{MS Sans Serif} 8 bold roman',
            text = 'Show Files',
        )
        self.theTextWidget = Text(root,
            height = '1',
            width = '1',
            wrap = 'none',
        )
        self.yScroll = Scrollbar(root,
        )
        self.xScroll = Scrollbar(root,
            orient = 'horizontal',
        )
        self.fileButton = Button(self.frame_1,
            text = 'Load File',
            width = '8',
        )
        self.exitButton = Button(self.frame_1,
            text = 'Exit',
            width = '8',
        )

        # widget commands

        self.theTextWidget.configure(
            xscrollcommand = self.xScroll.set
        )
        self.theTextWidget.configure(
            yscrollcommand = self.yScroll.set
        )
        self.yScroll.configure(
            command = self.theTextWidget.yview
        )
        self.xScroll.configure(
            command = self.theTextWidget.xview
        )
        self.fileButton.configure(
            command = self.loadfile
        )
        self.exitButton.configure(
            command = self.doexit
        )


        # Geometry Management
        self.frame_1.grid(
            in_    = root,
            column = 1,
            row    = 4,
            columnspan = '2',
            sticky = 'nesw'
        )
        self.label_1.grid(
            in_    = root,
            column = 1,
            row    = 1
        )
        self.theTextWidget.grid(
            in_    = root,
            column = 1,
            row    = 2,
            sticky = 'nesw'
        )
        self.yScroll.grid(
            in_    = root,
            column = 2,
            row    = 2,
            sticky = 'ns'
        )
        self.xScroll.grid(
            in_    = root,
            column = 1,
            row    = 3,
            sticky = 'ew'
        )
        self.fileButton.grid(
            in_    = self.frame_1,
            column = 1,
            row    = 1
        )
        self.exitButton.grid(
            in_    = self.frame_1,
            column = 2,
            row    = 1
        )


        # Resize Behavior
        root.grid_rowconfigure(1, weight = 0, minsize = 2, pad = 0)
        root.grid_rowconfigure(2, weight = 1, minsize = 116, pad = 0)
        root.grid_rowconfigure(3, weight = 0, minsize = 6, pad = 0)
        root.grid_rowconfigure(4, weight = 0, minsize = 40, pad = 0)
        root.grid_columnconfigure(1, weight = 1, minsize = 238, pad = 0)
        root.grid_columnconfigure(2, weight = 0, minsize = 2, pad = 0)
        self.frame_1.grid_rowconfigure(1, weight = 0, minsize = 26, pad = 0)
        self.frame_1.grid_columnconfigure(1, weight = 1, minsize = 40, pad = 0)
        self.frame_1.grid_columnconfigure(2, weight = 1, minsize = 40, pad = 0)


