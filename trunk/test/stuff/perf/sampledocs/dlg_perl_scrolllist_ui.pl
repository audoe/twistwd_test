# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
# 
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
# 
# The Original Code is Komodo code.
# 
# The Initial Developer of the Original Code is ActiveState Software Inc.
# Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
# ActiveState Software Inc. All Rights Reserved.
# 
# Contributor(s):
#   ActiveState Software Inc
# 
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
# 
# ***** END LICENSE BLOCK *****

# dlg_perl_scrolllist_ui.pl --
#
# UI generated by GUI Builder v1.0on 2002-09-12 10:44:06 from:
#	uiC:/p4/depot/main/Apps/Komodo-devel/src/samples/dlg_perl_scrolllist_ui.pl
# THIS IS AN AUTOGENERATED FILE AND SHOULD NOT BE EDITED.
# The associated callback file should be modified instead.
#

# Declare the package for this dialog
package dlg_perl_scrolllist;

use Tk;
use Tk::Menu;

# dlg_perl_scrolllist::ui --
#
# ARGS:
#   root     the parent window for this form
#
sub dlg_perl_scrolllist::ui {
    our($root) = @_;


    # Widget Initialization
    our($frame_1) = $root->Frame(
    );
    our($theLabel) = $root->Label(
	-anchor => 'w',
	-font => '{MS Sans Serif} 8 bold roman',
	-text => 'Insert data into the listbox:',
    );
    our($myListbox) = $root->Listbox(
	-exportselection => '0',
	-font => '{MS Sans Serif} 8 normal roman',
	-width => '0',
    );
    our($vertScrollbar) = $root->Scrollbar(
    );
    our($horizScrollbar) = $root->Scrollbar(
	-orient => 'horizontal',
    );
    our($insertButton) = $root->Button(
	-text => 'Insert Element',
	-width => '12',
    );
    our($exitButton) = $root->Button(
	-text => 'Exit',
	-width => '8',
    );

    # widget commands

    $myListbox->configure(
	-xscrollcommand => [set => $horizScrollbar]
    );
    $myListbox->configure(
	-yscrollcommand => [set => $vertScrollbar]
    );
    $vertScrollbar->configure(
	-command => [yview => $myListbox]
    );
    $horizScrollbar->configure(
	-command => [xview => $myListbox]
    );
    $insertButton->configure(
	-command => \&insertButton_command
    );
    $exitButton->configure(
	-command => sub { exit; }
    );


    # Geometry Management
    $frame_1->grid(
	-in     => $root,
	-column => '1',
	-row    => '4',
	-columnspan => '2',
	-sticky => 'nesw'
    );
    $theLabel->grid(
	-in     => $root,
	-column => '1',
	-row    => '1',
	-columnspan => '2',
	-sticky => 'nesw'
    );
    $myListbox->grid(
	-in     => $root,
	-column => '1',
	-row    => '2',
	-sticky => 'nesw'
    );
    $vertScrollbar->grid(
	-in     => $root,
	-column => '2',
	-row    => '2',
	-sticky => 'ns'
    );
    $horizScrollbar->grid(
	-in     => $root,
	-column => '1',
	-row    => '3',
	-sticky => 'ew'
    );
    $insertButton->grid(
	-in     => $frame_1,
	-column => '1',
	-row    => '1'
    );
    $exitButton->grid(
	-in     => $frame_1,
	-column => '2',
	-row    => '1'
    );


    # Resize Behavior
    $root->gridRowconfigure(1, -weight => 0, -minsize => 5, -pad => 0);
    $root->gridRowconfigure(2, -weight => 1, -minsize => 170, -pad => 0);
    $root->gridRowconfigure(3, -weight => 0, -minsize => 13, -pad => 0);
    $root->gridRowconfigure(4, -weight => 0, -minsize => 40, -pad => 0);
    $root->gridColumnconfigure(1, -weight => 1, -minsize => 143, -pad => 0);
    $root->gridColumnconfigure(2, -weight => 0, -minsize => 2, -pad => 0);
    $frame_1->gridRowconfigure(1, -weight => 0, -minsize => 40, -pad => 0);
    $frame_1->gridColumnconfigure(1, -weight => 1, -minsize => 40, -pad => 0);
    $frame_1->gridColumnconfigure(2, -weight => 1, -minsize => 40, -pad => 0);
}

1;
