# HG changeset patch
# Parent b390facdd90c63b5dd6ec525f7dcc82b1487173d
importing patch double-instantiate.patch

diff --git a/content/base/src/nsObjectLoadingContent.cpp b/content/base/src/nsObjectLoadingContent.cpp
--- a/content/base/src/nsObjectLoadingContent.cpp
+++ b/content/base/src/nsObjectLoadingContent.cpp
@@ -1856,16 +1856,24 @@ nsObjectLoadingContent::Instantiate(nsIO
                                     nsIURI* aURI)
 {
   NS_ASSERTION(aFrame, "Must have a frame here");
 
   // We're instantiating now, invalidate any pending async instantiate
   // calls.
   mPendingInstantiateEvent = nsnull;
 
+  // If the plugin instance already exists, we've already instantiated!
+  nsIPluginInstance* aInstance = nsnull;
+  nsresult rv = aFrame->GetPluginInstance(aInstance);
+  if (aInstance) {
+    // plugin already created, don't do it again
+    return NS_OK;
+  }
+
   // Mark that we're instantiating now so that we don't end up
   // re-entering instantiation code.
   PRBool oldInstantiatingValue = mInstantiating;
   mInstantiating = PR_TRUE;
 
   nsCString typeToUse(aMIMEType);
   if (typeToUse.IsEmpty() && aURI) {
     IsPluginEnabledByExtension(aURI, typeToUse);
@@ -1885,17 +1893,17 @@ nsObjectLoadingContent::Instantiate(nsIO
 
   nsIFrame *nsiframe = do_QueryFrame(aFrame);
   nsWeakFrame weakFrame(nsiframe);
 
   // We'll always have a type or a URI by the time we get here
   NS_ASSERTION(aURI || !typeToUse.IsEmpty(), "Need a URI or a type");
   LOG(("OBJLC [%p]: Calling [%p]->Instantiate(<%s>, %p)\n", this, aFrame,
        typeToUse.get(), aURI));
-  nsresult rv = aFrame->Instantiate(typeToUse.get(), aURI);
+  rv = aFrame->Instantiate(typeToUse.get(), aURI);
 
   mInstantiating = oldInstantiatingValue;
 
   nsCOMPtr<nsIPluginInstance> pluginInstance;
   if (weakFrame.IsAlive()) {
     aFrame->GetPluginInstance(*getter_AddRefs(pluginInstance));
   }
   if (pluginInstance) {
