
Fix the Komodo "editor stops working after changing spaces in MacOSX 10.6" bug:
http://bugs.activestate.com/show_bug.cgi?id=84698

This patch is not yet applied to the Mozilla 1.9.1 branch, but it may be
applied to 1.9.1 sometime in the future.

# HG changeset patch
# User Steven Michaud <smichaud@pobox.com>
# Date 1255970350 18000
# Node ID 259e824613ea0cb13c9ba6c47178f76f2b0060a2
# Parent 3abef873e69fc7d65ca5410db5948097a1979a85
Bug 516249 - [10.6] Wrong event modifiers passed to plugin on switching Spaces with Ctrl-<number key>. r=josh a=jst

--- layout/generic/nsObjectFrame.cpp
+++ layout/generic/nsObjectFrame.cpp
@@ -3528,7 +3528,7 @@ static void InitializeEventRecord(EventR
     ::GetGlobalMouse(&event->where);
   }
   event->when = ::TickCount();
-  event->modifiers = ::GetCurrentEventKeyModifiers();
+  event->modifiers = ::GetCurrentKeyModifiers();
 }
 
 NPDrawingModel nsPluginInstanceOwner::GetDrawingModel()
--- widget/src/cocoa/nsChildView.mm
+++ widget/src/cocoa/nsChildView.mm
@@ -2395,17 +2395,17 @@ NS_IMETHODIMP nsChildView::GetToggledKey
       break;
     case NS_VK_NUM_LOCK:
       key = kEventKeyModifierNumLockMask;
       break;
     // Mac doesn't support SCROLL_LOCK state.
     default:
       return NS_ERROR_NOT_IMPLEMENTED;
   }
-  PRUint32 modifierFlags = ::GetCurrentEventKeyModifiers();
+  PRUint32 modifierFlags = ::GetCurrentKeyModifiers();
   *aLEDState = (modifierFlags & key) != 0;
   return NS_OK;
 
   NS_OBJC_END_TRY_ABORT_BLOCK_NSRESULT;
 }
 
 
 #pragma mark -
@@ -3653,17 +3653,17 @@ static const PRInt32 sShadowInvalidation
     geckoEvent.button = nsMouseEvent::eLeftButton;
 
   // create native EventRecord for use by plugins
   EventRecord macEvent;
   macEvent.what = mouseDown;
   macEvent.message = 0;
   macEvent.when = ::TickCount();
   ::GetGlobalMouse(&macEvent.where);
-  macEvent.modifiers = ::GetCurrentEventKeyModifiers();
+  macEvent.modifiers = ::GetCurrentKeyModifiers();
   geckoEvent.nativeMsg = &macEvent;
 
   mGeckoChild->DispatchWindowEvent(geckoEvent);
 
   // XXX maybe call markedTextSelectionChanged:client: here?
 
   NS_OBJC_END_TRY_ABORT_BLOCK;
 }
@@ -3693,17 +3693,17 @@ static const PRInt32 sShadowInvalidation
     geckoEvent.button = nsMouseEvent::eLeftButton;
 
   // create native EventRecord for use by plugins
   EventRecord macEvent;
   macEvent.what = mouseUp;
   macEvent.message = 0;
   macEvent.when = ::TickCount();
   ::GetGlobalMouse(&macEvent.where);
-  macEvent.modifiers = ::GetCurrentEventKeyModifiers();
+  macEvent.modifiers = ::GetCurrentKeyModifiers();
   geckoEvent.nativeMsg = &macEvent;
 
   mGeckoChild->DispatchWindowEvent(geckoEvent);
 
   NS_OBJC_END_TRY_ABORT_BLOCK;
 }
 
 
@@ -3724,17 +3724,17 @@ static nsEventStatus SendGeckoMouseEnter
   event.refPoint.x = nscoord((PRInt32)localEventLocation->x);
   event.refPoint.y = nscoord((PRInt32)localEventLocation->y);
 
   EventRecord macEvent;
   macEvent.what = adjustCursorEvent;
   macEvent.message = 0;
   macEvent.when = ::TickCount();
   ::GetGlobalMouse(&macEvent.where);
-  macEvent.modifiers = ::GetCurrentEventKeyModifiers();
+  macEvent.modifiers = ::GetCurrentKeyModifiers();
   event.nativeMsg = &macEvent;
 
   event.exit = type;
 
   nsEventStatus status;
   widget->DispatchEvent(&event, status);
 
   // After the cursor exits a view set it to a visible regular arrow cursor.
@@ -3862,17 +3862,17 @@ static nsEventStatus SendGeckoMouseEnter
   [self convertCocoaMouseEvent:theEvent toGeckoEvent:&geckoEvent];
 
   // create native EventRecord for use by plugins
   EventRecord macEvent;
   macEvent.what = adjustCursorEvent;
   macEvent.message = 0;
   macEvent.when = ::TickCount();
   ::GetGlobalMouse(&macEvent.where);
-  macEvent.modifiers = ::GetCurrentEventKeyModifiers();
+  macEvent.modifiers = ::GetCurrentKeyModifiers();
   geckoEvent.nativeMsg = &macEvent;
 
   mGeckoChild->DispatchWindowEvent(geckoEvent);
 
   NS_OBJC_END_TRY_ABORT_BLOCK;
 }
 
 
@@ -3899,17 +3899,17 @@ static nsEventStatus SendGeckoMouseEnter
   [self convertCocoaMouseEvent:theEvent toGeckoEvent:&geckoEvent];
 
   // create native EventRecord for use by plugins
   EventRecord macEvent;
   macEvent.what = nullEvent;
   macEvent.message = 0;
   macEvent.when = ::TickCount();
   ::GetGlobalMouse(&macEvent.where);
-  macEvent.modifiers = btnState | ::GetCurrentEventKeyModifiers();
+  macEvent.modifiers = btnState | ::GetCurrentKeyModifiers();
   geckoEvent.nativeMsg = &macEvent;
 
   mGeckoChild->DispatchWindowEvent(geckoEvent);
 
   // Note, sending the above event might have destroyed our widget since we didn't retain.
   // Fine so long as we don't access any local variables from here on.
 
   gLastDragView = nil;
@@ -4356,17 +4356,17 @@ static void ConvertCocoaKeyEventToMacEve
               charCode = convertedCharCode;
             //NSLog(@"charcode is %d, converted to %c, char is %@", charCode, convertedCharCode, [cocoaEvent characters]);
             break;
         }
     }
     macEvent.message = (charCode & 0x00FF) | (nsCocoaUtils::GetCocoaEventKeyCode(cocoaEvent) << 8);
     macEvent.when = ::TickCount();
     ::GetGlobalMouse(&macEvent.where);
-    macEvent.modifiers = ::GetCurrentEventKeyModifiers();
+    macEvent.modifiers = ::GetCurrentKeyModifiers();
 
   NS_OBJC_END_TRY_ABORT_BLOCK;
 }
 
 static PRBool IsPrintableChar(PRUnichar aChar)
 {
   return (aChar >= 0x20 && aChar <= 0x7E) || aChar >= 0xA0;
 }
