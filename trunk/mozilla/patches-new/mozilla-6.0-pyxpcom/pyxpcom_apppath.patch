# HG changeset patch
# Parent ca68733fe470bef8f6eb2af65b7a547f98fcf3ec
importing patch pyxpcom_apppath.patch

diff --git a/xpcom/src/PyXPCOM.h b/xpcom/src/PyXPCOM.h
--- a/xpcom/src/PyXPCOM.h
+++ b/xpcom/src/PyXPCOM.h
@@ -633,6 +633,7 @@ public:
 
 // Initialize Python and do anything else necessary to get a functioning
 // Python environment going...
+PYXPCOM_EXPORT void PyXPCOM_SetPythonHome();
 PYXPCOM_EXPORT void PyXPCOM_EnsurePythonEnvironment(void);
 
 PYXPCOM_EXPORT void PyXPCOM_MakePendingCalls();
diff --git a/xpcom/src/dllmain.cpp b/xpcom/src/dllmain.cpp
--- a/xpcom/src/dllmain.cpp
+++ b/xpcom/src/dllmain.cpp
@@ -96,30 +96,15 @@ PyXPCOM_ReleaseGlobalLock(void)
 	PR_Unlock(g_lockMain);
 }
 
-// Ensure that any paths guaranteed by this package exist on sys.path
-// Only called once as we are first loaded into the process.
-void AddStandardPaths()
+bool AddSitePath(nsIFile *aFile)
 {
-	// Put {bin}\Python on the path if it exists.
-	nsresult rv;
-	nsCOMPtr<nsIFile> aFile;
-	// XXX - this needs more thought for XULRunner - we want to stick the global
-	// 'python' dir on sys.path (for xpcom etc), but also want to support a way
-	// of adding a local application directory (in the case of xulrunner) too.
-	// NS_XPCOM_CURRENT_PROCESS_DIR is the XULRunner app dir (ie, where application.ini lives)
-	// NS_GRE_DIR is the 'bin' dir for XULRunner itself.
-	rv = NS_GetSpecialDirectory(NS_GRE_DIR, getter_AddRefs(aFile));
-	if (NS_FAILED(rv)) {
-		PyXPCOM_LogError("The Python XPCOM loader could not locate the 'bin' directory");
-		return;
-	}
 	aFile->Append(NS_LITERAL_STRING("python"));
 	nsAutoString pathBuf;
 	aFile->GetPath(pathBuf);
 	PyObject *obPath = PySys_GetObject("path");
 	if (!obPath) {
 		PyXPCOM_LogError("The Python XPCOM loader could not get the Python sys.path variable");
-		return;
+		return false;
 	}
 	// XXX - this should use the file-system encoding...
 	NS_LossyConvertUTF16toASCII pathCBuf(pathBuf);
@@ -138,7 +123,81 @@ void AddStandardPaths()
 	if (0 != PyRun_SimpleString((char *)cmdBuf.get())) {
 		PyXPCOM_LogError("The directory '%s' could not be added as a site directory", pathCBuf.get());
 		PyErr_Clear();
+		return false;
 	}
+	return true;
+}
+
+
+
+/* Set PYTHONHOME to '../../python' dir relative to the pyloader location
+ * (if it exists).
+ */
+PYXPCOM_EXPORT void
+PyXPCOM_SetPythonHome() {
+    nsresult rv;
+
+    /* Look for siloed Python in ../python relative to the gre dir
+     */
+    nsCOMPtr<nsIFile> binDir;
+    rv = NS_GetSpecialDirectory(NS_GRE_DIR, getter_AddRefs(binDir));
+    if (NS_FAILED(rv)) {
+        PyXPCOM_LogError("pyloader: Couldn't get gre dir!\n");
+        return;
+    }
+    nsCOMPtr<nsIFile> distDir;
+    rv = binDir->GetParent(getter_AddRefs(distDir));
+    if (NS_FAILED(rv)) {
+        PyXPCOM_LogError("pyloader: Couldn't get bin parent dir!\n");
+        return;
+    }
+    nsCOMPtr<nsILocalFile> pythonHome = do_QueryInterface(distDir);
+    rv = pythonHome->AppendRelativePath(NS_LITERAL_STRING("python"));
+    if (NS_FAILED(rv)) {
+        PyXPCOM_LogError("pyloader: Couldn't build python home dir!\n");
+        return;
+    }
+
+    PRBool exists;
+    rv = pythonHome->Exists(&exists);
+    if (NS_FAILED(rv) || !exists) return;
+
+    nsCAutoString cstr;
+    pythonHome->GetNativePath(cstr);
+    char *expr = PR_smprintf("PYTHONHOME=%s", cstr.get());
+    if (expr) {
+        PR_SetEnv(expr);
+    } else {
+        PyXPCOM_LogError("pyloader: Couldn't set PYTHONHOME!\n");
+    }
+}
+
+// Ensure that any paths guaranteed by this package exist on sys.path
+// Only called once as we are first loaded into the process.
+void AddStandardPaths()
+{
+	// Put {bin}\Python on the path if it exists.
+	nsresult rv;
+	nsCOMPtr<nsIFile> aFile;
+	// XXX - this needs more thought for XULRunner - we want to stick the global
+	// 'python' dir on sys.path (for xpcom etc), but also want to support a way
+	// of adding a local application directory (in the case of xulrunner) too.
+	// NS_XPCOM_CURRENT_PROCESS_DIR is the XULRunner app dir (ie, where application.ini lives)
+	// NS_GRE_DIR is the 'bin' dir for XULRunner itself.
+	rv = NS_GetSpecialDirectory(NS_GRE_DIR, getter_AddRefs(aFile));
+	if (NS_FAILED(rv)) {
+		PyXPCOM_LogError("The Python XPCOM loader could not locate the 'bin' directory");
+		return;
+	}
+	if (!AddSitePath(aFile)) return;
+
+	rv = NS_GetSpecialDirectory(NS_XPCOM_CURRENT_PROCESS_DIR, getter_AddRefs(aFile));
+	if (NS_FAILED(rv)) {
+		PyXPCOM_LogError("The Python XPCOM loader could not locate the 'current process' directory");
+		return;
+	}
+	if (!AddSitePath(aFile)) return;
+	
 	// and somewhat like Python itself (site, citecustomize), we attempt 
 	// to import "sitepyxpcom" ignoring ImportError
 	PyObject *mod = PyImport_ImportModule("sitepyxpcom");
diff --git a/xpcom/src/loader/pyloader.cpp b/xpcom/src/loader/pyloader.cpp
--- a/xpcom/src/loader/pyloader.cpp
+++ b/xpcom/src/loader/pyloader.cpp
@@ -84,6 +84,7 @@ nsPythonModuleLoader::Init()
     LOG(PR_LOG_DEBUG, ("nsPythonModuleLoader::Init()"));
 
     /* Ensure Python environment is initialized. */
+    PyXPCOM_SetPythonHome();
     PyXPCOM_EnsurePythonEnvironment();
 
     CEnterLeavePython _celp;
