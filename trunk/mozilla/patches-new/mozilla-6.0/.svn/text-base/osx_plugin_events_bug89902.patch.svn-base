Event handling hacks to stop the SciMoz plugin from eating certain events. This
ensures the xul:scintilla element can receive the focus during a mouse-click and
that key events are not send/swallowed by the plugin - bug 89902.

diff -r 9b8188993c1a content/xul/content/src/nsXULElement.cpp
--- a/content/xul/content/src/nsXULElement.cpp	Mon Apr 18 20:00:01 2011 -0400
+++ b/content/xul/content/src/nsXULElement.cpp	Fri Apr 29 14:26:26 2011 -0700
@@ -549,6 +549,9 @@
 {
   return !aNodeInfo->Equals(nsGkAtoms::tree) &&
          !aNodeInfo->Equals(nsGkAtoms::listbox) &&
+         // ACTIVESTATE: allow mouse-click focus for xul:scintilla element.
+         !aNodeInfo->NameAtom()->Equals(NS_LITERAL_STRING("scintilla")) &&
+         // ACTIVESTATE: end
          !aNodeInfo->Equals(nsGkAtoms::richlistbox);
 }
 
diff -r 9b8188993c1a widget/src/cocoa/nsChildView.mm
--- a/widget/src/cocoa/nsChildView.mm	Mon Apr 18 20:00:01 2011 -0400
+++ b/widget/src/cocoa/nsChildView.mm	Fri Apr 29 14:26:26 2011 -0700
@@ -2673,6 +2673,13 @@
 // this to be a 'focused' widget for event dispatch.
 - (BOOL)acceptsFirstResponder
 {
+  // ACTIVESTATE: Don't allow the plugin to become the first reponder, we need
+  //              "xul:scintilla" to be the first responder in order to get
+  //              proper key and mouse handling - see bug 89902.
+  if (mIsPluginView) {
+    return NO;
+  }
+  // ACTIVESTATE: end
   return YES;
 }
 
@@ -5561,7 +5577,8 @@
 {
   NS_OBJC_BEGIN_TRY_ABORT_BLOCK;
 
-  if (mGeckoChild && mIsPluginView) {
+  // ACTIVESTATE: Don't allow any key events to go to the plugin.
+  if (0 && mGeckoChild && mIsPluginView) {
 #ifdef NP_NO_CARBON
     if (mPluginEventModel == NPEventModelCocoa) {
       ComplexTextInputPanel* ctiPanel = [ComplexTextInputPanel sharedComplexTextInputPanel];
