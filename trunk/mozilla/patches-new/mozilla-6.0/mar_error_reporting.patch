# HG changeset patch
# Parent ca5dfcd6d612779d1fc9fdc2912ef93c72b3a41a
mozilla bug 386245 - add some extra error reporting to mar

diff --git a/modules/libmar/src/mar_extract.c b/modules/libmar/src/mar_extract.c
--- a/modules/libmar/src/mar_extract.c
+++ b/modules/libmar/src/mar_extract.c
@@ -37,16 +37,17 @@
  * ***** END LICENSE BLOCK ***** */
 
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
 #include <string.h>
 #include <stdlib.h>
 #include <stdio.h>
+#include <errno.h>
 #include "mar.h"
 #include "mar_private.h"
 
 #ifdef XP_WIN
 #include <io.h>
 #include <direct.h>
 #ifdef WINCE
 #include <windows.h>
@@ -78,18 +78,24 @@
 
 #ifdef XP_WIN
   fd = _open(item->name, _O_BINARY|_O_CREAT|_O_TRUNC|_O_WRONLY, item->flags);
 #else
   fd = creat(item->name, item->flags);
 #endif
-  if (fd == -1)
+  if (fd == -1) {
+    fprintf(stderr, "mar: ERROR(%d) %s: could not create `%s'\n",
+            errno, strerror(errno), item->name);
     return -1;
+  }
 
   fp = fdopen(fd, "wb");
-  if (!fp)
+  if (!fp) {
+    fprintf(stderr, "mar: ERROR(%d) %s: could not fdopen() descriptor for `%s'\n",
+            errno, strerror(errno), item->name);
     return -1;
+  }
 
   while ((len = mar_read(mar, item, offset, buf, sizeof(buf))) > 0) {
     if (fwrite(buf, len, 1, fp) != 1)
       break;
     offset += len;
   }
@@ -100,14 +106,16 @@
 
 int mar_extract(const char *path) {
   MarFile *mar;
   int rv;
 
   mar = mar_open(path);
-  if (!mar)
-    return -1;
+  if (!mar) {
+    fprintf(stderr, "mar: ERROR: error opening `%s'\n", path);
+     return -1;
+  }
 
   rv = mar_enum_items(mar, mar_test_callback, NULL);
 
   mar_close(mar);
   return rv;
 }
