# HG changeset patch
# Parent 8f3f4a16495deaffa01c59377228ebc2b6fa716c
importing patch XRE_USERAPPDATADIR.patch

diff --git a/toolkit/xre/nsXREDirProvider.cpp b/toolkit/xre/nsXREDirProvider.cpp
--- a/toolkit/xre/nsXREDirProvider.cpp
+++ b/toolkit/xre/nsXREDirProvider.cpp
@@ -37,16 +37,18 @@
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 #include "nsAppRunner.h"
 #include "nsXREDirProvider.h"
 
+#include "prenv.h"
+
 #include "jsapi.h"
 
 #include "nsIJSContextStack.h"
 #include "nsIDirectoryEnumerator.h"
 #include "nsILocalFile.h"
 #include "nsIObserver.h"
 #include "nsIObserverService.h"
 #include "nsIPrefService.h"
@@ -1019,16 +1021,27 @@ nsXREDirProvider::GetProfileDir(nsIFile*
 
 nsresult
 nsXREDirProvider::GetUserDataDirectoryHome(nsILocalFile** aFile, PRBool aLocal)
 {
   // Copied from nsAppFileLocationProvider (more or less)
   nsresult rv;
   nsCOMPtr<nsILocalFile> localDir;
 
+  // ActiveState Komodo patch:
+  // Allow the _XRE_USERAPPDATADIR environment variable to override.
+  const char* envvar;
+  envvar = PR_GetEnv("_XRE_USERAPPDATADIR");
+  if (envvar && *envvar) {
+    rv = NS_NewNativeLocalFile(nsDependentCString(envvar), PR_TRUE,
+                               getter_AddRefs(localDir));
+    NS_ENSURE_SUCCESS(rv, rv);
+  }
+  else {
+
 #if defined(XP_MACOSX)
   FSRef fsRef;
   OSType folderType;
   if (aLocal) {
     folderType = kCachedDataFolderType;
   } else {
 #ifdef MOZ_THUNDERBIRD
     folderType = kDomainLibraryFolderType;
@@ -1111,16 +1124,17 @@ nsXREDirProvider::GetUserDataDirectoryHo
   if (!homeDir || !*homeDir)
     return NS_ERROR_FAILURE;
 
   rv = NS_NewNativeLocalFile(nsDependentCString(homeDir), PR_TRUE,
                              getter_AddRefs(localDir));
 #else
 #error "Don't know how to get product dir on your platform"
 #endif
+  } /* if $_XRE_USERAPPDATADIR */
 
   NS_IF_ADDREF(*aFile = localDir);
   return rv;
 }
 
 nsresult
 nsXREDirProvider::GetSysUserExtensionsDirectory(nsILocalFile** aFile)
 {
